# -*- coding: utf-8 -*-
"""random variable generation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uDFeeU3hbf0ebszw1XHWhp6Xp8m-GQbH

**Discrete Random Variable**
"""

# Commented out IPython magic to ensure Python compatibility.
from numpy.random import choice
import matplotlib.pyplot as plt
# %matplotlib inline
 
def count_frequencies(data,relative=False):
  counter={}
  for element in data:
    if element not in counter:
      counter[element] = 1
    else:
      counter[element] += 1
  
  if relative:
    for element in counter:
      counter[element] /= len(data)
  return counter

sample= choice([1,2,3,4,5],size=100,p=[0.3,0.1,0.4,0.0,0.2])
print(sample)
count_frequencies(sample)

freq=count_frequencies(sample,relative=True)
plt.bar(list(freq.keys()),list(freq.values()))

"""**Continuous Random variable**"""

import scipy.stats
X= scipy.stats.uniform(3,4)
X.pdf(3.5)

import numpy as np
x=np.linspace(2,8,100)
x

from numpy.random import uniform
plt.plot(x,X.pdf(x))
# sample=uniform(low=3,high=7,size=100000)
# plt.hist(sample,density=True)