# -*- coding: utf-8 -*-
"""R.No.:(21to25)_PGLAB-1PRAC_GENERATERANDOMVARIABLE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PoVm3J98YLowB7-G_bQkAI9uP7GZ75j-

**RJSPGITDSAI1L1  - PG Lab â€“ I 
(Fundamentals of Data Science)**

**GROUP MEMBERS**

21 - NADAR PRIYA EBANEZAR MANI

22 - MORE NEHA VIJAY

23 - NIRMAL DEEPAK RAJESH KUMAR

24 - DHEERAJKUMAR PAL

25 - PUTHANPURIYAL ANJU SHAJI

**PRACTICAL NO. : 5**

**Generation of Random Variable**
1. Discrete Random Variable
2. Continuous Random Variable

**RANDOM VARIABLE**

A Random Variable, usually written as X, is a variable whose possible values are numerical outcomes of a random phenomenon.                                                                 
There are two types of random variables,**Discrete Random Variables** and **Continuous Random Variables**.

1. **DISCRETE RANDOM VARIABLE**                                                                   
*   A discrete random variable is one which may take on only a countable number of distinct values such as 0,1,2,3,4,.............
*   Discrete random variables are usually (but not necessarily) counts.
*   Examples :
    
    i.    number of children in a family.
    
    ii.   the number of patients a doctor sees in one day.  
      
    iii.  the number of defective bulbs in a box of ten.

*   **Discrete Random Variable**
    1. Number of Sales
    2. Number of Calls
    3. Shares of stock
    4. People in line
    5. Mistakes per page

1.   **ROLE IN STATISTICAL MODELLING**                                            
=>  It is used to predict results of experiment under assumptions. 
2.  **ROLE IN MACHINE LEARNING (ML)**                                            
=>  Discrete Random Variable are used in ML, most notably in the modeling of binary and multi-class classification problems, but also n evaluating the performance for binary classification of confidence intervals.
3.   **ROLE IN DEEP LEARNING**                                                                       
=>  Discrete Random Variable is required in the choice of activation functions in the output layer of deep learning neural networks for classification tasks and selecting an loss function.
4.   **ROLE IN NATURAL LANGUAGE PROCESSING (NLP)**                                                                                                                                                  
=>  Discrete Random Variable is used in the modeling of the distribution of words in text for NLP

**EXAMPLE 1**

The outcome of a dice roll
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
from numpy import random
# %matplotlib inline

def random_variable_of_dice_roll():
  return random.randint(1, 7)
num_trials = range(100,10000, 10)
avgs = []
for num_trial in num_trials:
  trials = []
  for trial in range(1,num_trial):
    trials.append( random_variable_of_dice_roll() )
  avgs.append(sum(trials)/float(num_trial))

plt.plot(num_trials, avgs)
plt.xlabel('Number of Trials')
plt.ylabel("Average")

print(trials)

"""**EXAMPLE 2**

**Binomial Distribution**


It describes the outcome of binary scenarios, e.g. toss of a coin, it will either be head or tails.

It has three parameters:

n - number of trials.

p - probability of occurence of each trial (e.g. for toss of a coin 0.5 each).

size - The shape of the returned array.


"""

from scipy.stats import binom
import seaborn as sb
binom.rvs(size=10,n=20,p=0.8)
data_binom = binom.rvs(n=10,p=0.8,size=1000)
ax = sb.distplot(data_binom,
                  kde=False)

"""**EXAMPLE 3**

COIN TOSS EXPERIMENT
"""

from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.binomial(n=10, p=0.5, size=1000), hist=True, kde=False)
plt.show()

"""**EXAMPLE 4**

**Poisson Distribution**

It estimates how many times an event can happen in a specified time. e.g. If someone eats twice a day what is probability he will eat thrice?

It has two parameters:

lam - rate or known number of occurences e.g. 2 for above problem.

size - The shape of the returned array.
"""

#Generate a random 1000 distribution for occurence 3:
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.poisson(lam=3, size=1000), kde=False)
plt.show()

"""**EXAMPLE 5** """

# Commented out IPython magic to ensure Python compatibility.
#Generating Random Number
from numpy.random import choice
import matplotlib.pyplot as plt
# %matplotlib inline
 
def count_frequencies(data,relative=False):
  counter={}
  for element in data:
    if element not in counter:
      counter[element] = 1
    else:
      counter[element] += 1
  
  if relative:
    for element in counter:
      counter[element] /= len(data)
  return counter
sample= choice([1,2,3,4,5],size=100,p=[0.3,0.1,0.4,0.0,0.2])
print(sample)
count_frequencies(sample)
#Visualization
freq=count_frequencies(sample,relative=True)
plt.bar(list(freq.keys()),list(freq.values()))

"""**EXAMPLE 6**

**Bernoulli Distribution**

The Bernoulli distribution is a special case of the Binomial distribution where a single experiment is conducted so that the number of observation is 1. So, the Bernoulli distribution therefore describes events having exactly two outcomes.
"""

from scipy.stats import bernoulli
import seaborn as sb
data_bern = bernoulli.rvs(size=1000,p=0.5)
ax = sb.distplot(data_bern,
                  kde=False)

"""2. **CONTINUOUS RANDOM VARIABLE**                                                                   
*   A continuous random variable can assume any value along a given interval of a number line.
*   Examples :
    
    The time a tourist stays at the top once he/she gets there

*   **Continuous Random Variable**
    1. Length
    2. Depth
    3. Volume
    4. Time
    5. Weight

1.   **ROLE IN STATISTICAL MODELLING**                                           
=>  It is used to find accuracy of the model.
2.   **ROLE IN MACHINE LEARNING (ML)**                                            
=>  Continuous Random Variables are encountered in ML, most notably in the distribution of numerical input and output variables for models and in the distribution of errors made by models. Knowledge of the normal continuous random variable is also required more generally in the density and parameter estimation performed by many machine learning models. 
3.   **ROLE IN DEEP LEARNING**                                                                       
=>  Continous Random Variable is used in deep learning to learn about patterns in the data.
4.   **ROLE IN NATURAL LANGUAGE PROCESSING (NLP)**                                                                                                                                                  
=>  Suppose there is a sentimental analyser that outputs a sentiment polarity value as a real number in the range (-1,1). The output of this system is an example of a continuous random Variable.

**EXAMPLE 1**

The length of a sales representatives phone call
"""

# minimum call length 3
#maximum call length 20
#number of trials 100
#mean value (mu) -- 4
#standard deviation - 2

def normal_pdf(x, mu = 4, sigma = 2):
    return (1./np.sqrt(2*3.14 * sigma**2)) * 2.718**(-(x-mu)**2 / (2. * sigma**2))

x_values = np.linspace(3,20,100)
y_values = [normal_pdf(x) for x in x_values]
plt.plot(x_values, y_values)

"""**EXAMPLE 2**

**Uniform Distribution**
used to describe probability where every event has equal chances of occuring.

E.g. Generation of random numbers.

It has three parameters:

a - lower bound - default 0 .0.

b - upper bound - default 1.0.

size - The shape of the returned array.
"""

#Generate a 100 uniform distribution sample and visualization for the same
from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.uniform(size=100), hist=False)
plt.show()

"""**EXAMPLE 3**"""

#Generating Random Number
import scipy.stats
X= scipy.stats.uniform(3,4)
X.pdf(3.5)
import numpy as np
x=np.linspace(2,8,100)
x

#Visualization
from numpy.random import uniform
plt.plot(x,X.pdf(x))
# sample=uniform(low=3,high=7,size=100000)
# plt.hist(sample,density=True)

"""**EXAMPLE 4**

**Logistic Distribution**

Logistic Distribution is used to describe growth.

Used extensively in machine learning in logistic regression, neural networks etc.

It has three parameters:

loc - mean, where the peak is. Default 0.

scale - standard deviation, the flatness of distribution. Default 1.

size - The shape of the returned array.
"""

from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.logistic(size=100), hist=False)
plt.show()

"""**EXAMPLE 5**

**Exponential Distribution**

Exponential distribution is used for describing time till next event e.g. failure/success etc.

It has two parameters:

scale - inverse of rate ( see lam in poisson distribution ) defaults to 1.0.

size - The shape of the returned array.
"""

from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.exponential(size=100), hist=False)
plt.show()

"""**EXAMPLE 6**

**Chi Square Distribution**

Chi Square distribution is used as a basis to verify the hypothesis.

It has two parameters:

df - (degree of freedom).

size - The shape of the returned array.
"""

#Generate a sample for chi squared distribution with degree of freedom 3 with size 100
from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.chisquare(df=3, size=100), hist=False)
plt.show()

"""**=======================================================================================**"""